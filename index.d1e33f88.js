var t={form:document.querySelector("#task-form"),taskList:document.querySelector("#task-list")};let e=(t=21)=>crypto.getRandomValues(new Uint8Array(t)).reduce(((t,e)=>t+=(e&=63)<36?e.toString(36):e<62?(e-26).toString(36).toUpperCase():e>62?"-":"_"),"");function n(t){const n={id:e()};return new FormData(t.currentTarget).forEach(((t,e)=>n[e]=t)),n}function a(){return JSON.parse(localStorage.getItem("notesData"))||[]}var s={addNote:function(t){const e=a();e.push(t),localStorage.setItem("notesData",JSON.stringify(e))},getNotes:a,removeNote:function(t){const e=a().filter((e=>e.id!==t));localStorage.setItem("notesData",JSON.stringify(e))}};function o(e){const n=`<li class="task-list-item">\n      <button class="task-list-item-btn" data-id="${e.id}">Удалить</button>\n     <h3>${e.taskName}</h3>\n      <p>${e.taskText}</p>\n  </li>\n `;t.taskList.insertAdjacentHTML("beforeend",n)}!function(e){const n=e.map((t=>`<li class="task-list-item">\n                <button class="task-list-item-btn" data-id="${t.id}">Удалить</button>\n                <h3>${t.taskName}</h3>\n                <p>${t.taskText}</p>\n                </li>`)).join("");t.taskList.insertAdjacentHTML("afterbegin",n)}(s.getNotes()),t.form.addEventListener("submit",(function(t){t.preventDefault();const e=n(t);s.addNote(e),o(e),t.currentTarget.reset()})),t.taskList.addEventListener("click",(function(t){"BUTTON"===t.target.nodeName&&s.removeNote(t.target.dataset.id)}));
//# sourceMappingURL=index.d1e33f88.js.map
